======================
0-add_integer
======================

Add integer module used to test the add_integer function

=====================
Import the function:
	>>> add_integer = __import__('0-add_integer').add_integer

check module doc:
	add_integer = __import__('0-add_integer').add_integer
	>>> mod_doc = __import__('0-add_integer').__doc__
	>>> len('mod_doc') > 1
	True
	>>> func_doc = __import__('0-add_integer').add_integer.__doc__
	>>> len('func_doc') > 1
	True

Pass cases:
    >>> add_integer(1, 2)
    3
    >>> add_integer(3, -2)
    1
    >>> add_integer(10.5, 22.5)
    32
    >>> add_integer(-5.9, -0.7)
    -5
    >>> add_integer(5.5, -2)
    3
    >>> add_integer(2)
    100

TypeError message of None arguments declared:
    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

TypeError message if second argument is None:
    >>> add_integer(5, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

TypeError a is not a integer:
    >>> add_integer("school", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

TypeError b is not a integer:
    >>> add_integer(3, "Alx")
    Traceback (most recent call last):
    TypeError: b must be an integer

TypeError a and b are not integers:
    >>> add_integer("Cisfun", "school")
    Traceback (most recent call last):
    TypeError: a must be an integer

OverflowError caused when a is int and b is inf:
    >>> add_integer(4, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

ValueError for Non assigned Number NaN(not a number):
    >>> add_integer(float('NaN'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
