1-my_list.py
======================

>>> MyList = __import__('1-my_list').MyList
>>>

=====================

Common test cases:

	>>> my_list = MyList()
	>>> type(my_list)
	<class '1-my_list.MyList'>
	>>> print (my_list)
	[]

	>>> my_list = MyList()
	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> print(my_list)
	[1, 4, 2, 3, 5]
	>>> my_list.print_sorted()
	[1, 2, 3, 4, 5]

	>>> my_list = MyList([1, 2, 3])
	>>> print(my_list)
	[1, 2, 3]
	>>> my_list[1] = 6
	>>> print(my_list)
	[1, 6, 3]
	>>> my_list.print_sorted()
	[1, 3, 6]

	>>> my_list = MyList()
	>>> print(my_list.print_sorted)
	<bound method MyList.print_sorted of []>

	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> print(my_list)
	[1, 4, 2, 3, 5]

Test with negative numbers:
	>>> my_list[1] = -5
	>>> my_list[4] = -1
	>>> my_list[0] = 0
	>>> print(my_list)
	[0, -5, 2, 3, -1]
	>>> my_list.print_sorted()
	[-5, -1, 0, 2, 3]

Test with undefined list:
	>>> my_list1.print_sorted()
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	NameError: name 'my_list1' is not defined
	>>>

	>>> a = [1, 6, 8, 5]
	>>> my_list = MyList(a)
	>>> my_list.print_sorted()
	[1, 5, 6, 8]

Test with empty list:
	>>> a = []
	>>> my_list = Mylist(a)
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	NameError: name 'Mylist' is not defined
	>>> my_list.printsorted()
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	AttributeError: 'MyList' object has no attribute 'printsorted'
	
TypeError when only one argument is given
	>>> my_list.print_sorted(1)
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	TypeError: print_sorted() takes 1 positional argument but 2 were given

Test with list of strings:
	>>> my_list = MyList()
	>>> my_list.append("String0")
	>>> my_list.append("String1")
	>>> my_list.append("String2")
	>>> my_list.append("String3")
	>>> my_list.append("String4")
	>>> print(my_list)
	['String0', 'String1', 'String2', 'String3', 'String4']
	>>> my_list.append("String4")
	>>> my_list.append("String3")
	>>> my_list.append("String0")
	>>> my_list.append("String2")
	>>> my_list.append("String1")
	>>> print(my_list)
	['String0', 'String1', 'String2', 'String3', 'String4', 'String4', 'String3', 'String0', 'String2', 'String1']
	>>> my_list.print_sorted()
	['String0', 'String0', 'String1', 'String1', 'String2', 'String2', 'String3', 'String3', 'String4', 'String4']

	>>> my_list = MyList()
	>>> my_list.print_sorted()
	[]
	
TypeError when a list of string and int is given:
	>>> my_list = MyList([3, "String1", "String2", 2])
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	  File "/root/alx-higher_level_programming/0x0A-python-inheritance/1-my_list.py", line 10, in print_sorted
	    print(sorted(self))
	TypeError: '<' not supported between instances of 'str' and 'int'
